name: Test

on:
  - push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: 'Latest: Linux, Python 3.9 & Node.js 15'
            os: ubuntu-latest
            python: '3.9'
            node: '15'
          - name: 'Python 3.8'
            os: ubuntu-latest
            python: '3.8'
            node: '15'
          - name: 'Python 3.7'
            os: ubuntu-latest
            python: '3.7'
            node: '15'
          - name: 'Python 3.6'
            os: ubuntu-latest
            python: '3.6'
            node: '15'
          - name: 'Node.js 14'
            os: ubuntu-latest
            python: '3.9'
            node: '14'
          - name: 'Node.js 12'
            os: ubuntu-latest
            python: '3.9'
            node: '12'
          - name: 'Node.js 10'
            os: ubuntu-latest
            python: '3.9'
            node: '10'
          - name: 'Mac OS'
            os: macos-latest
            python: '3.9'
            node: '15'
          - name: 'Windows'
            os: windows-latest
            python: '3.8'
            node: '15'

    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install APT dependencies
        if: startsWith(runner.os, 'Linux')
        run: sudo apt-get install libxml2-dev libxslt1-dev

      - name: Install Homebrew dependencies
        if: startsWith(runner.os, 'macOS')
        run: brew install shellcheck

      - name: Install Chocolatey dependencies
        if: startsWith(runner.os, 'Windows')
        run: choco install shellcheck

      - name: Build the development environment
        run: |
          ./bin/build-dev
        shell: bash

      - name: Get the pip cache directory path
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache the pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Get the npm cache directory path
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache the npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run the tests
        run: |
          ./bin/test
        shell: bash

      - name: Upload code coverage
        uses: codecov/codecov-action@v1
