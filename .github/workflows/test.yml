name: Test

on:
  schedule:
    - cron: '0 * * * *'
  pull_request:
  push:
    branches:
      - '[0-9].[0-9].x'
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: 'Python 3.11'
            os: ubuntu-latest
            python: '3.11'
          - name: 'Python 3.10'
            os: ubuntu-latest
            python: '3.10'
          - name: 'Python 3.9'
            os: ubuntu-latest
            python: '3.9'
          - name: 'Python 3.8'
            os: ubuntu-latest
            python: '3.8'
          - name: 'Mac OS'
            os: macos-latest
            python: '3.11'
          - name: 'Windows'
            os: windows-latest
            python: '3.11'

    steps:
      - name: Check out the source code
        uses: actions/checkout@v3

      - name: Get the pip cache directory
        run: echo "pip_cache_dir=$(pip cache dir)" >> $GITHUB_ENV
        shell: bash

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ env.pip_cache_dir }}
          key: pip-${{ runner.os }}-${{ matrix.python }}-${{ hashFiles('./setup.py') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python }}-

      - name: Get the npm cache directory
        run: echo "npm_cache_dir=$(npm config get cache)" >> $GITHUB_ENV
        shell: bash

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ${{ env.npm_cache_dir }}
          key: npm-${{ runner.os }}-${{ hashFiles('./package.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Cache Mypy
        uses: actions/cache@v3
        with:
          path: ./.mypy_cache
          key: mypy-${{ matrix.python }}-${{ hashFiles('./setup.py') }}
          restore-keys: |
            mypy-${{ matrix.python }}-

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install APT dependencies
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo apt-get update
          apt_packages=(
            libasound2 # For Cypress
            libegl1-mesa # For Qt
            libgbm-dev # For Cypress
            libgconf-2-4 # For Cypress
            libgtk2.0-0 # For Cypress
            libgtk-3-0 # For Cypress
            libnotify-dev # For Cypress
            libnss3 # For Cypress
            libx11-xcb-dev # For Qt
            '^libxcb.*-dev' # For Qt
            libxkbcommon-x11-0 # For Qt
            libxss1 # For Cypress
            libxtst6 # For Cypress
            xauth # For Cypress
            xvfb # For Cypress and pytest-xvfb
          )
          sudo apt-get install "${apt_packages[@]}"

      - name: Install Homebrew dependencies
        if: startsWith(runner.os, 'macOS')
        run: brew install shellcheck

      - name: Install Chocolatey dependencies
        if: startsWith(runner.os, 'Windows')
        run: choco install shellcheck

      - name: Build the development environment
        run: |
          ./bin/build-dev
        shell: bash

      - name: Get the Cypress cache directory
        run: echo "cypress_cache_dir=$(./node_modules/.bin/cypress cache path)" >> $GITHUB_ENV
        shell: bash

      - name: Cache Cypress
        uses: actions/cache@v3
        with:
          path: ${{ env.cypress_cache_dir }}
          key: cypress-${{ runner.os }}-${{ hashFiles('./package.json') }}
          restore-keys: |
            cypress-

      - name: Run the tests
        run: |
          ./bin/test
        shell: bash

      - name: Upload code coverage
        uses: codecov/codecov-action@v3
