name: Publish releases

on: push

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Determine the tag
        run: echo "betty_tag=${GITHUB_REF#refs/*/}-dev" >> $GITHUB_ENV
        shell: bash

      - name: Delete the previous release, if there is any
        run: gh release delete ${{ env.betty_tag }} -y || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete the previous tag, if there is any
        run: git push --delete --force origin "$(git rev-parse --abbrev-ref HEAD)-dev" || true
        shell: bash

      - name: Tag the release
        run: git tag ${{ env.betty_tag }}
        shell: bash

      - name: Push the release tag
        run: git push origin ${{ env.betty_tag }}
        shell: bash

      - name: Create the release
        run: gh release create ${{ env.betty_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  pyinstaller-executable:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Mac OS
            os: macos-latest
            dist_file_name: betty.app
            notification_icon: 🍎
            notification_os: Mac OS
          - name: Windows
            os: windows-latest
            dist_file_name: betty.exe
            notification_icon: 🪟
            notification_os: Windows
    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Cache pip (Linux)
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('./setup.py') }}
          restore-keys: |
            pip-${{ runner.os }}-
            pip-

      - name: Cache pip (Mac OS)
        uses: actions/cache@v3
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: pip-${{ runner.os }}-${{ hashFiles('./setup.py') }}
          restore-keys: |
            pip-${{ runner.os }}-
            pip-

      - name: Cache pip (Windows)
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: pip-${{ runner.os }}-${{ hashFiles('./setup.py') }}
          restore-keys: |
            pip-${{ runner.os }}-
            pip-

      - name: Cache Mypy
        uses: actions/cache@v3
        with:
          path: ./.mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('./setup.py') }}
          restore-keys: |
            mypy-${{ runner.os }}-
            mypy-

      - name: Get the npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache npm
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: npm-${{ runner.os }}-${{ hashFiles('./package.json') }}
          restore-keys: |
            npm-${{ runner.os }}-
            npm-

      - name: Determine the tag for branch builds
        if: startsWith(github.ref, 'refs/heads/')
        run: echo "betty_tag=$(git rev-parse --abbrev-ref HEAD)-dev" >> $GITHUB_ENV
        shell: bash

      - name: Determine the tag for tag builds
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "betty_tag=$(echo '{{ github.ref }}' | awk '{print substr($1,11)}')" >> $GITHUB_ENV
        shell: bash

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Build the development environment
        run: ./bin/build-dev
        shell: bash

      - name: Build the executable
        run: ./bin/build-pyinstaller
        shell: bash

      - name: Zip the Mac OS executable
        if: startsWith(runner.os, 'macOS')
        run: zip -X ./dist/${{ matrix.dist_file_name }}.zip ./dist/${{ matrix.dist_file_name }}
        shell: bash

      - name: Zip the Windows executable
        if: startsWith(runner.os, 'Windows')
        run: Compress-Archive .\dist\${{ matrix.dist_file_name }} .\dist\${{ matrix.dist_file_name }}.zip

      - name: Publish the executable
        id: publish
        run: gh release upload ${{ env.betty_tag }} ./dist/${{ matrix.dist_file_name }}.zip --clobber
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify collaborators of the release
        uses: mshick/add-pr-comment@v1
        with:
          message: |
            ${{ matrix.notification_icon }} Uploaded [${{ matrix.dist_file_name }}.zip](https://github.com/bartfeenstra/betty/releases/download/${{ env.betty_tag }}/${{ matrix.dist_file_name }}.zip) for commit ${{ github.sha }}. You can download it, test it on **${{ matrix.notification_os }}**, and post your feedback in a comment to this pull request 💕
            
            The download will disappear once this pull request is merged, or when it is being rebuilt after a new commit.
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          allow-repeats: false
