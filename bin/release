#!/usr/bin/env bash

set -Eeuo pipefail

cd "$(dirname "$0")/.."

if [ "$#" -ne 1 ]
then
  echo "This command takes a single argument, which is the version to release."
  exit 1
fi

VERSION=$1
BRANCH="release-$VERSION"

# Check we are releasing a valid Semantic Version.
if [[ ! $VERSION =~ ^[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}$ ]]; then
    echo "$VERSION is not a valid Semantic Version (x.y.z). See https://semver.org/."
    exit 1
fi

# Check this version does not already exist.
git fetch --tags
if git tag | grep -q "^$VERSION$"; then
    echo "Version $VERSION already exists."
    exit 1
fi

# Check there are no uncommitted changes.
if ! git diff-index --quiet HEAD --; then
    echo 'The Git repository has uncommitted changes.'
    exit 1
fi

# Create the release branch.
git checkout -b "$BRANCH"

# Commit the release to Git.
echo "$VERSION" > VERSION
git add VERSION
git commit -m "Release version $VERSION."
git tag "$VERSION"

# Build and publish the package.s
./bin/build-package
twine upload --repository-url https://upload.pypi.org/legacy/ ./dist/*

# Revert back to master.
git checkout master
git branch -D "release-$VERSION"

# Push changes.
git push origin "$VERSION"
