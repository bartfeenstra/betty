{% extends 'base.html.j2' %}
{%- import 'macro/citation.html.j2' as citationMacros -%}
{%- import 'macro/fact.html.j2' as factMacros -%}
{% set title = citation.location %}
{% block content %}
    <div class="meta">
    {{ citationMacros.label(citation, citation) }}
    </div>
    {% set files = citation.files %}
    {% if files | length > 0 %}
        <h2>{{ _('Media') }}</h2>
        {% include 'list-file.html.j2' %}
    {% endif %}
    {% set facts = citation.facts | select('is_entity') | list %}



    {# @todo DO NOT RENDER CITATIONS/REFERENCES   #}

{# @todo We keep calling these label macros from everywhere   #}
{# @todo But they must also be context-aware   #}
{# @todo However, not every macro needs to be aware of every type of context. If they do not render citations, they do not need to be citation-aware   #}
{# @todo Also, not every caller knows which contexts the macro needs    #}
{# @todo Can we convert these to template files instead, that just read the current variables, and if one with the correct name exists, use that as a context?   #}
{# @todo    #}
{# @todo    #}

    {% if facts | length > 0 %}
        <h2>{% trans %}Facts{% endtrans %}</h2>
        <ul class="entities">
            {% for fact in facts %}
                <li class="{{ loop.cycle('odd', 'even') }}">
                    <a href="{{ fact | url }}">{{ factMacros.label(fact, citation_context=citation) }}</a>
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endblock %}