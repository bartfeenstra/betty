{% if extensions['betty.extension.nginx.Nginx'].https %}
    server {
        listen 80;
        server_name {{ server_name }};
        return 301 https://$host$request_uri;
    }
{% endif %}
server {
	listen {% if extensions['betty.extension.nginx.Nginx'].https %}443 ssl http2{% else %}80{% endif %};
	server_name {{ server_name }};
	root {{ extensions['betty.extension.nginx.Nginx'].www_directory_path }};
    {% if extensions['betty.extension.nginx.Nginx'].https %}
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    {% endif %}
	add_header Cache-Control "max-age=86400";
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_types text/css application/javascript application/json application/xml;

    {% if app.ancestry.files | length > 0 %}
        # Redirect Betty <0.3 file paths to Betty 0.3 file paths.
        {% for file in app.ancestry.files.values() %}
            location /file/{{ file.id }}{{ file.path.suffix }} {
                return 301 /file/{{ file.id }}/file/{{ file.path.name }};
            }
        {% endfor %}
    {% endif %}

    {% if app.configuration.content_negotiation %}
        set_by_lua_block $media_type_extension {
            local available_media_types = {'text/html', 'application/json'}
            local media_type_extensions = {}
            media_type_extensions['text/html'] = 'html'
            media_type_extensions['application/json'] = 'json'
            local media_type = require('cone').negotiate(ngx.req.get_headers()['Accept'], available_media_types)
            return media_type_extensions[media_type]
        }
    {% else %}
        set $media_type_extension html;
    {% endif %}
    index index.$media_type_extension;

    {% if app.configuration.multilingual %}
        location ~ ^/({{ app.configuration.locales | map(attribute='alias') | join('|') }})(/|$) {
            set $locale $1;

            add_header Content-Language "$locale" always;

            # Handle HTTP error responses.
            error_page 401 /$locale/.error/401.$media_type_extension;
            error_page 403 /$locale/.error/403.$media_type_extension;
            error_page 404 /$locale/.error/404.$media_type_extension;
            location ~ ^/$locale/\.error {
                internal;
            }

            try_files $uri $uri/ =404;
        }
        location @localized_redirect {
            {% if app.configuration.content_negotiation %}
                set_by_lua_block $locale_alias {
                    local available_locales = {'{{ app.configuration.locales | map(attribute='locale') | join("', '") }}'}
                    local locale_aliases = {}
                    {% for locale_configuration in app.configuration.locales %}
                        locale_aliases['{{ locale_configuration.locale }}'] = '{{ locale_configuration.alias }}'
                    {% endfor %}
                    local locale = require('cone').negotiate(ngx.req.get_headers()['Accept-Language'], available_locales)
                    return locale_aliases[locale]
                }
            {% else %}
                set $locale_alias {{ app.configuration.locales[app.locale].alias }};
            {% endif %}
            return 301 /$locale_alias$uri;
        }
        location / {
            try_files $uri @localized_redirect;
        }
    {% else %}
        location / {
            # Handle HTTP error responses.
            error_page 401 /.error/401.$media_type_extension;
            error_page 403 /.error/403.$media_type_extension;
            error_page 404 /.error/404.$media_type_extension;
            location /.error {
                internal;
            }

            try_files $uri $uri/ =404;
        }
    {% endif %}
}
